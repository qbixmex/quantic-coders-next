// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String @id @default(uuid())
  name        String
  slug        String @unique
  description String

  // Timestamps
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  articles Article[]

  // Indexes
  @@index([name, slug])
  @@map("categories")
}

model Article {
  id          String    @id @default(uuid())
  title       String
  slug        String    @unique
  image       String
  description String    @default("no_image.jpg")
  content     String    @db.Text
  tags        String[]
  publishedAt DateTime? @map("published_at")
  author      String
  robots      String?   @default("noindex, nofollow")

  // Relations
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  // Timestamps
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Indexes
  @@index([title, slug])
  @@map("articles")
}

enum Role {
  admin
  subscriber
  author
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  emailVerified DateTime? @map("email_verified")
  password      String
  role          Role      @default(subscriber)
  image         String?

  // Relationship
  articles Article[]
  @@map("users")
}
